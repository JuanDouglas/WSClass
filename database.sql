CREATE TABLE [Login] (
[ID] INTEGER IDENTITY PRIMARY KEY NOT NULL,
[UserName] VARCHAR(100) UNIQUE NOT NULL,
[Password] VARCHAR(200) NOT NULL,
[Email] VARCHAR(300) UNIQUE NOT NULL,
[isValidEmail] BIT NOT NULL,
[CreateDate] DATETIME NOT NULL
);

CREATE TABLE [IP] (
[ID] INTEGER IDENTITY PRIMARY KEY NOT NULL,
[IP] VARCHAR(36) UNIQUE NOT NULL,
[Confiance] INT NOT NULL,
[AlreadyBeenBanned] BIT NOT NULL
);

CREATE TABLE [Authentication] (
[ID] INTEGER IDENTITY PRIMARY KEY NOT NULL,
[User-Agent] VARCHAR(300) NOT NULL,
[IP] VARCHAR(36) NOT NULL,
[Token] VARCHAR(36) UNIQUE NOT NULL,
[Login] INTEGER NOT NULL,
[Date] DATETIME NOT NULL,
FOREIGN KEY ([Login]) REFERENCES [Login]([ID]),
FOREIGN KEY ([IP]) REFERENCES [IP]([IP])
);

CREATE TABLE [File] (
[ID] INTEGER PRIMARY KEY IDENTITY NOT NULL,
[Path] VARCHAR(MAX) NOT NULL,
[FileType] INT NOT NULL,
[Leaght] INTEGER NOT NULL
);

CREATE TABLE [User] (
[ID] INTEGER PRIMARY KEY IDENTITY NOT NULL,
[LoginID] INTEGER UNIQUE NOT NUll,
[FirstName] VARCHAR(100) NOT NULL,
[SecondName] VARCHAR(100) NULL,
[BirthDay] DATETIME NOT NULL,
[AccountType] INT NOT NULL,
[PhoneNumber] VARCHAR(30) NULL,
[AcceptedTerms] BIT NOT NULL,
[ProfileImage] INTEGER NOT NULL,
[ValidKey] VARCHAR(74) UNIQUE NOT NULL,
FOREIGN KEY ([ProfileImage]) REFERENCES [Image]([ID]),
FOREIGN KEY ([LoginID]) REFERENCES [Login]([ID])
);

CREATE TABLE [Notification] (
[ID] INTEGER PRIMARY KEY IDENTITY NOT NULL,
[Title] VARCHAR(100) NOT NULL,
[Content] VARCHAR(MAX) NOT NULL,
[Icon] INTEGER NULL, 
[User] INTEGER NOT NULL,
FOREIGN KEY ([Icon]) REFERENCES [Image]([ID]),
FOREIGN KEY ([User]) REFERENCES [User]([ID])
);

CREATE TABLE [Image](
[ID] INTEGER PRIMARY KEY IDENTITY NOT NULL,
[Width] INTEGER NULL,
[Height] INTEGER NULL,
[Extension] INT NOT NULL,
[File] INTEGER NOT NULL,
FOREIGN KEY ([File]) REFERENCES [File]([ID])
);

CREATE TABLE [Class](
[ID] INTEGER PRIMARY KEY IDENTITY NOT NULL,
[Name] VARCHAR(100) NOT NULL,
[CreateDate] DATETIME NOT NULL,
[Description] VARCHAR(MAX) NULL
);

CREATE TABLE [Class_has_Students](
[ID] INTEGER PRIMARY KEY IDENTITY NOT NULL,
[Student] INTEGER NOT NULL,
[Class] INTEGER NOT NULL,
[AddDate] DATETIME NOT NULL,
FOREIGN KEY ([Student]) REFERENCES [User]([ID]),
FOREIGN KEY ([Class]) REFERENCES [Class]([ID])
);

CREATE TABLE [Class_has_Teacher](
[ID] INTEGER PRIMARY KEY IDENTITY NOT NULL,
[Teacher] INTEGER NOT NULL,
[Class] INTEGER NOT NULL,
[AddDate] DATETIME NOT NULL,
FOREIGN KEY ([Teacher]) REFERENCES [User]([ID]),
FOREIGN KEY ([Class]) REFERENCES [Class]([ID])
);

CREATE TABLE [Task] (
[ID] INTEGER PRIMARY KEY IDENTITY NOT NULL,
[Name] VARCHAR(100) NOT NULL,
[Points] INT NOT NULL,
[TaskIcon] INTEGER NOT NULL,
[Content] VARCHAR(MAX) NOT NULL,
[StartDate] DATETIME NOT NULL,
[Creator] INTEGER NOT NULL,
[Class] INTEGER NOT NULL,
FOREIGN KEY ([Creator]) REFERENCES [User]([ID]),
FOREIGN KEY ([Class]) REFERENCES [Class]([ID])
);
CREATE TABLE [SendTask] (
[ID] INTEGER PRIMARY KEY IDENTITY NOT NULL,
[File] INTEGER NOT NULL,
[Description] VARCHAR(MAX) NOT NULL,
[User] INTEGER NOT NULL,
[Task] INTEGER NOT NULL,
[Date] DATETIME NOT NULL,
FOREIGN KEY ([User]) REFERENCES [User]([ID]),
FOREIGN KEY ([Task]) REFERENCES [Task]([ID]),
FOREIGN KEY ([File]) REFERENCES [File]([ID])
);

CREATE TABLE [CompletTask] (
[ID] INTEGER PRIMARY KEY IDENTITY NOT NULL,
[User] INTEGER NOT NULL,
[CompletationDate] DATETIME NOT NULL,
[Task] INTEGER NOT NULL,
[SendTask] INTEGER NOT NULL,
FOREIGN KEY ([Task]) REFERENCES [Task]([ID]),
FOREIGN KEY ([User]) REFERENCES [User]([ID]),
FOREIGN KEY ([SendTask]) REFERENCES [SendTask]([ID])
);

